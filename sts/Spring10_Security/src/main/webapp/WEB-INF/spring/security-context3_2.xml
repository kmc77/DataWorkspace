<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 시큐리티는 인증을 담당하는 AuthenticationManager(인증매니저) 가 존해합니다.
		 이 인증매니저는 AuthenticationProvider라는 구현제를 이용해서 처리합
		 니다.
		 AuthenticationProvider 인터페이스는 화면에서 입력한 로그인 정보와  DB에서 가져온 사용자의 정보를
		 비교해주는 인터페이스입니다.
		 DB에서 사용자의 정보를 가져오기 위해 UserDetailsService 구현체를 이용합니다.
		 
	2.   UserDetailsService 구현체의 빈 이름을 'user-service-ref' 속성에 설정합니다.
		 UserDetailsService 구현체는 유저 정보를 가져오는 클래스입니다.
		 
	3.	servlet-context.xml의 
		 <bean id="bcryptPasswordEncoder"
		 		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
		 		를 root-context.xml로 옯겨옵니다.
		 		
		 servlet-context.xml에서 설정한 빈은 security-context.xml에서 사용할 수 없습니다.
		 
	4.	<security:password-encoder ref="bcryptPasswordEncoder" /> :
		password-encoder: 비밀번호 암호화에 사용될 정보를 설정합니다.
		bvryptPasswordEncoder는 root-context.xml에서 설정한 빈의 이름입니다. 		
	 -->
	 
	 
	 
	 <!-- 
	 	(4) username-parameter : 사용자의 계정명을 어떤한 파라미터명으로 받을 것 인지 설정합니다.
	 							 form의 input 태그의 사용자 계정 name과 동일하게 작성합니다.
	 							 우리가 사용하는 아이디가 스프링 시큐리티에서는 username으로 사용됩니다.
	 	(5) password-parameter : form의 input 태그 패스워드 name과 동일하게 작성합니다.
	 	
	 	(6) authentication-failure-handler-ref : 인증 실패를 처리하는 데 사용되며
	 		AuthenticationF						 
	 
	 
	  -->
	 
	 	 <security:http>
	 	<security:form-login login-page="/member/login"
	 						 default-target-url="/board/list"
	 						 login-processing-url="/member/loginProcess"
	 						 username-parameter="id"
	 						 password-parameter="password"
	 						 authentication-failure-handler-ref="loginFailHandler"
 							/>
	 </security:http>
	 
			<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- com.naver.security.CustomUserDetailsService.java -->
	<context:component-scan base-package="com.naver.security"/>



	 </beans>
