/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-28 08:41:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class member_005fjoinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/jhta/Documents/workspace-sts-3.9.18.RELEASE/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Spring4_MVC_BOARD/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1692760004745L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write(" \r\n");
      out.write("		\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>로그인 처리</title>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/join.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/js/jquery-3.7.0.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	$(function() {\r\n");
      out.write("		let checkid = false;\r\n");
      out.write("		let checkemail = false;\r\n");
      out.write("		\r\n");
      out.write("		$(\"input[name = id]\").on('keyup',\r\n");
      out.write("				function() {\r\n");
      out.write("			\r\n");
      out.write("			//[A-Za-z0-9_]의 의미가 \\w\r\n");
      out.write("			const pattern = /^\\w{5,12}$/;\r\n");
      out.write("			const id = $(\"input:eq(0)\").val();\r\n");
      out.write("			if (!pattern.test(id)) {\r\n");
      out.write("				$(\"#message\").css('color', 'red')\r\n");
      out.write("							 .html(\"영문자 숫자 _로 5 ~ 12자 가능합니다.\");\r\n");
      out.write("				checkid = false;\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"idcheck\",\r\n");
      out.write("				 data: { id: id },  \r\n");
      out.write("		            success: function(resp) {\r\n");
      out.write("					if(resp == -1) {//db에 해당 id 가 없는 경우\r\n");
      out.write("						$(\"#message\").css('color', 'green').html(\"사용 가능한 아이디 입니다.\");\r\n");
      out.write("						checkid = true;\r\n");
      out.write("					} else { //db에 해당 id 가 있는 경우(0)\r\n");
      out.write("					$(\"#message\").css('color', 'blue').html(\"사용중인 아이디 입니다.\");\r\n");
      out.write("					checkid = false;\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			}); //ajax end\r\n");
      out.write("		}); //keyup end\r\n");
      out.write("	\r\n");
      out.write("	$(\"input[name=email]\").on('keyup',\r\n");
      out.write("			function() {\r\n");
      out.write("				//[A-Za-z0-9_]와 동일한 것이 \\w 입니다.\r\n");
      out.write("				//+는 1회 이상 반복을 의미하고 {1,}와 동일합니다.\r\n");
      out.write("				//\\w+ 는 [AZa-z0-9_]를 1개 이상 사용하라는 의미입니다.\r\n");
      out.write("				const pattern = /^\\w+@\\w+[.]\\w{3}$/;\r\n");
      out.write("				const email_value = $(this).val();\r\n");
      out.write("				\r\n");
      out.write("				if(!pattern.test(email_value)) {\r\n");
      out.write("					$(\"#email_message\").css('color', 'red')\r\n");
      out.write("									   .html(\"이메일형식이 맞지 않습니다.\")\r\n");
      out.write("					checkemail = false;				   \r\n");
      out.write("				} else {\r\n");
      out.write("					$(\"#email_message\").css('color', 'green')\r\n");
      out.write("									   .html(\"이메일형식에 맞습니다.\")\r\n");
      out.write("					checkemail = true;				   \r\n");
      out.write("				}\r\n");
      out.write("	}); //email keyup 이벤트 처리 끝\r\n");
      out.write("\r\n");
      out.write("	$('form').submit(function() {\r\n");
      out.write("		if (!$.isNumeric($(\"input[name='age']\").val())) {\r\n");
      out.write("			alert(\"나이는 숫자를 입력하세요\");\r\n");
      out.write("			$(\"input[name='age']\").val('').focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(!checkid) {\r\n");
      out.write("			alert(\"사용가능한 id로 입력하세요.\");\r\n");
      out.write("			$(\"input[name=id]\").val('').focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(!checkemail){\r\n");
      out.write("			alert(\"email 형식을 확인하세요.\");\r\n");
      out.write("			$(\"input[name=email]\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	}); //submit\r\n");
      out.write("	});//ready\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form name=\"joinform\" action=\"joinProscess\" method=\"post\">\r\n");
      out.write("\r\n");
      out.write(" <h1>회원가입 페이지</h1>\r\n");
      out.write(" 	 <hr>\r\n");
      out.write(" 	 <b>아이디</b>\r\n");
      out.write("		<input type=\"text\" name=\"id\" placeholder=\"Enter id\" maxLength=\"12\" required>\r\n");
      out.write("		<span id=\"message\"></span>\r\n");
      out.write("		\r\n");
      out.write("		<b>비밀번호</b>\r\n");
      out.write("		<input type=\"password\" name=\"password\" placeholder=\"Enter password\" required>\r\n");
      out.write("		\r\n");
      out.write("		<b>이름</b>\r\n");
      out.write("		<input type=\"text\" name=\"name\" placeholder=\"Enter name\" maxLength=\"5\" required>\r\n");
      out.write("		\r\n");
      out.write("		<b>나이</b>\r\n");
      out.write("		<input type=\"text\" name=\"age\"  \r\n");
      out.write("		maxLength=\"2\" placeholder=\"Enter age\" required>\r\n");
      out.write("		\r\n");
      out.write("		<b>성별</b>\r\n");
      out.write("		<div>\r\n");
      out.write("			<input type=\"radio\" name=\"gender\" value=\"남\" checked><span>남자</span>\r\n");
      out.write("			<input type=\"radio\" name=\"gender\" value=\"여\"><span>여자</span>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<b>이메일 주소</b>\r\n");
      out.write("			<input type=\"text\" name=\"email\" placeholder=\"Enter name\" maxLength=\"30\" required>\r\n");
      out.write("			<span id=\"email_message\"></span>\r\n");
      out.write("			<div class=\"clearfix\">\r\n");
      out.write("				<button type=\"submit\" class=\"submitbtn\">회원가입</button>\r\n");
      out.write("				<button type=\"reset\" class=\"cancelbtn\">다시작성</button>\r\n");
      out.write("			</div>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
