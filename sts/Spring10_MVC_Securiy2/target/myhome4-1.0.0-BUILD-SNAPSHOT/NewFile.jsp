*** AOP(Aspect Oriented Programming) 의 정의 ***
- 여러 객체에 공통으로 적용할 수 있는 기능을 구분함으로써 재사용을 높여주는 프로그래밍 기법입니다.
- AOP의 핵심 기능과 공통 기능의 구현을 분리함으로써 핵심 기능을 구현한 코드의 수정 없이 공통 기능을 적용할 수
  있게 만들어 줍니다.
- 애플리케이션을 개발하기 위하여 관심을 가지고 구현 해야 하는 각각의 기능들을 관심 사항  


=> 1) 공통 기능의 코드 : 횡단(공통) 관심 사항(cross-cutting concern) 예) 로깅, 트랜잭션 처리
   2) 핵심 기능의 코드 : 핵심 관심 사항(core concern)
   
*** AOP 의 주요 용어 ***
1. 타겟(Target) : 핵심 기능이 구현된 객체로 공통기능의 적용 대상이 되는 객체를 의미합니다.

2. 조인포인트(Joinpoint)
	Target이 가진 메서드를 의미하며 조인포인트 중에서 포인트 컷이 선택됩니다.

3. 포인트 컷(Pointcut)
	Target이 가진 메서드가 조인포인트라면 포인트 컷은 필터링된 조인포인트를 의미합니다.
	
		이렇게 수많은 비즈니스 메소드 중에서 우리가 원하는 특정 메서드에서만
		횡단 관심에 해당하는 공통 기능을 수행시키기 위해서 포인트 컷이 필요합니다.
		포인트 컷을 이용하면 메서드가 포함된 클래스와 패키지는 물론이고 메서드 시그니처까지 
		정확하게 지정할 수 있습니다.
		
1) 포인트 컷 표현식 사용방법
   표현식을 통해서 포인트 컷을 필터링할 수 있습니다.
   사용방법은 아래와 같습니다.
   <aop:pointcut id=getPointcut"
   		expression="execution(* com.json.jsonroot..*Impl.get*(..))"/>	
   				   